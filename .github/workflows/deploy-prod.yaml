name: Deploy to production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-telegraf-operator:
    name: Install telegraf-operator
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - uses: actions/checkout@v2

      - name: Setup gcloud CLI for deploy
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.DIGDIR_FDK_PROD_AUTODEPLOY }}
          export_default_credentials: true

      - name: Apply Helm template telegraf-operator
        run: |
          helm template \
          --set INFLUXDB_ADMIN_USER=${{ secrets.INFLUXDB_ADMIN_USER }} \
          --set INFLUXDB_ADMIN_PASSWORD=${{ secrets.INFLUXDB_ADMIN_PASSWORD_PROD }} \
          ./helm-sources/telegraf-operator/ > ./kubectlapply-telegraf-operator.yaml
          chmod o+w ./kubectlapply-telegraf-operator.yaml
          cat kubectlapply-telegraf-operator.yaml

      - name: Deploy telegraf operator
        run: |
          gcloud container clusters get-credentials digdir-fdk-prod --region europe-north1-a --project digdir-fdk-prod
          kubectl apply -f ./kubectlapply-telegraf-operator.yaml --force

  deploy-monitoring-services:

    strategy:
      fail-fast: false
      matrix:
        app: [ fdk-monitoring-services-telegraf, fdk-monitoring-services-influxdb, fdk-monitoring-services-grafana ]

    name: Build and deploy to prod environment
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - uses: actions/checkout@v2

      - name: Apply Helm template ${{ matrix.app }}
        run: |
          helm template \
          --set INFLUXDB_ADMIN_USER=${{ secrets.INFLUXDB_ADMIN_USER }} \
          --set INFLUXDB_ADMIN_PASSWORD=${{ secrets.INFLUXDB_ADMIN_PASSWORD_PROD }} \
          -f ./helm-sources/${{ matrix.app }}/prod.yaml \
          ./helm-sources/${{ matrix.app }}/ > ./kubectlapply-${{ matrix.app }}.yaml
          chmod o+w ./kubectlapply-${{ matrix.app }}.yaml
          cat kubectlapply-${{ matrix.app }}.yaml

      - name: Setup gcloud CLI for deploy
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.DIGDIR_FDK_PROD_AUTODEPLOY }}
          export_default_credentials: true

      - name: Deploy to GCP
        run: |
          gcloud container clusters get-credentials digdir-fdk-prod --region europe-north1-a --project digdir-fdk-prod
          kubectl apply -f ./kubectlapply-${{ matrix.app }}.yaml --force
          kubectl --namespace=prod rollout restart deployment ${{ matrix.app }}

          if ! kubectl --namespace=prod rollout status deployment ${{ matrix.app }}; then
            kubectl --namespace=prod rollout undo deployment ${{ matrix.app }}
            kubectl --namespace=prod rollout status deployment ${{ matrix.app }}
            exit 1
          fi

      - name: Notify slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: 'Application: (T)elegraf,(I)nfluxdb,(G)rafana | Environment: prod'
          fields: commit,author,workflow,message
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
