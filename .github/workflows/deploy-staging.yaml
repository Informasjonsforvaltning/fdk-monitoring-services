name: Deploy to staging

on:
  pull_request:
    types: [ready_for_review, opened, reopened, synchronize]
    branches:
      - main
  # Allows you to run the workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy-kube-prometheus-stack:
    name: Install kube prometheus stack
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - uses: actions/checkout@v2

      - name: Auth gcloud CLI for deploy
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.DIGDIR_FDK_DEV_AUTODEPLOY }}

      - name: Apply Helm chart kube-prometheus-stack
        run: |
          gcloud container clusters get-credentials digdir-fdk-dev --region europe-north1-a --project digdir-fdk-dev
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
          helm install --namespace monitoring --create-namespace --values kube-prometheus-stack/values.yaml kube-prometheus-stack prometheus-community/kube-prometheus-stack

  deploy-telegraf-operator:
    name: Install telegraf-operator
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - uses: actions/checkout@v2

      - name: Setup gcloud CLI for deploy
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.DIGDIR_FDK_DEV_AUTODEPLOY }}
          export_default_credentials: true

      - name: Apply Helm template telegraf-operator
        run: |
          helm template \
          --set INFLUXDB_ADMIN_USER=${{ secrets.INFLUXDB_ADMIN_USER }} \
          --set INFLUXDB_ADMIN_PASSWORD=${{ secrets.INFLUXDB_ADMIN_PASSWORD_STAGING }} \
          ./helm-sources/telegraf-operator/ > ./kubectlapply-telegraf-operator.yaml
          chmod o+w ./kubectlapply-telegraf-operator.yaml
          cat kubectlapply-telegraf-operator.yaml

      - name: Deploy telegraf operator
        run: |
          gcloud container clusters get-credentials digdir-fdk-dev --region europe-north1-a --project digdir-fdk-dev
          kubectl apply -f ./kubectlapply-telegraf-operator.yaml --force

  deploy-monitoring-services:

    strategy:
      fail-fast: false
      matrix:
        app: [ fdk-monitoring-services-telegraf, fdk-monitoring-services-influxdb, fdk-monitoring-services-grafana ]

    name: Build and deploy to staging environment when pull request is created
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - uses: actions/checkout@v2

      - name: Apply Helm template ${{ matrix.app }}
        run: |
          helm template \
          --set INFLUXDB_ADMIN_USER=${{ secrets.INFLUXDB_ADMIN_USER }} \
          --set INFLUXDB_ADMIN_PASSWORD=${{ secrets.INFLUXDB_ADMIN_PASSWORD }} \
          -f ./helm-sources/${{ matrix.app }}/staging.yaml \
          ./helm-sources/${{ matrix.app }}/ > ./kubectlapply-${{ matrix.app }}.yaml
          chmod o+w ./kubectlapply-${{ matrix.app }}.yaml
          cat kubectlapply-${{ matrix.app }}.yaml
      - name: Setup gcloud CLI for deploy
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.DIGDIR_FDK_DEV_AUTODEPLOY }}
          export_default_credentials: true

      - name: Deploy to GCP
        run: |
          gcloud container clusters get-credentials digdir-fdk-dev --region europe-north1-a --project digdir-fdk-dev
          kubectl apply -f ./kubectlapply-${{ matrix.app }}.yaml --force
          kubectl --namespace=staging rollout restart deployment ${{ matrix.app }}

    #          if ! kubectl --namespace=staging rollout status deployment ${{ matrix.app }}; then
    #            kubectl --namespace=staging rollout undo deployment ${{ matrix.app }}
    #            kubectl --namespace=staging rollout status deployment ${{ matrix.app }}
    #            exit 1
    #          fi



#      - name: Notify slack
#        uses: 8398a7/action-slack@v3
#        with:
#          status: ${{ job.status }}
#          author_name: 'Application: (T)elegraf,(I)nfluxdb,(C)hronograf,(K)apacitor | Environment: staging'
#          fields: commit,author,workflow
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#        if: always()
